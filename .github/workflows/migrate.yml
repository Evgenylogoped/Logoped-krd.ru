name: DB Migrate (Prisma)

on:
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
          POSTGRES_DB: logoped
        options: >-
          --health-cmd="pg_isready -U app -d logoped"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=30
          --health-start-period=30s

    env:
      NODE_ENV: production
      DATABASE_URL: postgresql://app:app@127.0.0.1:5432/logoped?schema=public

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: |
          echo "DATABASE_URL=$DATABASE_URL"
          DATABASE_URL="$DATABASE_URL" npx prisma generate

      - name: Wait for Postgres (robust)
        run: |
          ATTEMPTS=100
          SLEEP=3
          for i in $(seq 1 $ATTEMPTS); do
            if pg_isready -h 127.0.0.1 -U app -d logoped >/dev/null 2>&1; then echo "pg_isready OK"; fi
            if DATABASE_URL="$DATABASE_URL" npx prisma db pull >/dev/null 2>&1; then echo "DB ready"; break; fi
            echo "waiting for DB ($i/$ATTEMPTS)..."; sleep $SLEEP;
          done

      - name: Run DB migrations (retry)
        run: |
          ATTEMPTS=10
          SLEEP=3
          for i in $(seq 1 $ATTEMPTS); do
            if DATABASE_URL="$DATABASE_URL" npx prisma migrate deploy; then exit 0; fi
            echo "migrate deploy retry ($i/$ATTEMPTS)..."; sleep $SLEEP;
          done
          echo "migrate deploy failed after retries"; exit 1

      - name: Seed (optional)
        run: |
          if [ -f prisma/seed.cjs ]; then DATABASE_URL="$DATABASE_URL" node prisma/seed.cjs; else echo "skip seed"; fi
